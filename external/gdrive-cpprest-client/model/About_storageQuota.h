/**
 * Drive
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * About_storageQuota.h
 *
 * The user&#39;s storage quota limits and usage. All fields are measured in bytes.
 */

#ifndef About_storageQuota_H_
#define About_storageQuota_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// The user&#39;s storage quota limits and usage. All fields are measured in bytes.
/// </summary>
class  About_storageQuota
    : public ModelBase
{
public:
    About_storageQuota();
    virtual ~About_storageQuota();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// About_storageQuota members

    /// <summary>
    /// The usage limit, if applicable. This will not be present if the user has unlimited storage.
    /// </summary>
    utility::string_t getLimit() const;
    bool limitIsSet() const;
    void unsetLimit();
    void setLimit(utility::string_t value);
    /// <summary>
    /// The total usage across all services.
    /// </summary>
    utility::string_t getUsage() const;
    bool usageIsSet() const;
    void unsetUsage();
    void setUsage(utility::string_t value);
    /// <summary>
    /// The usage by all files in Google Drive.
    /// </summary>
    utility::string_t getUsageInDrive() const;
    bool usageInDriveIsSet() const;
    void unsetUsageInDrive();
    void setUsageInDrive(utility::string_t value);
    /// <summary>
    /// The usage by trashed files in Google Drive.
    /// </summary>
    utility::string_t getUsageInDriveTrash() const;
    bool usageInDriveTrashIsSet() const;
    void unsetUsageInDriveTrash();
    void setUsageInDriveTrash(utility::string_t value);

protected:
    utility::string_t m_Limit;
    bool m_LimitIsSet;
    utility::string_t m_Usage;
    bool m_UsageIsSet;
    utility::string_t m_UsageInDrive;
    bool m_UsageInDriveIsSet;
    utility::string_t m_UsageInDriveTrash;
    bool m_UsageInDriveTrashIsSet;
};

}
}
}
}

#endif /* About_storageQuota_H_ */
