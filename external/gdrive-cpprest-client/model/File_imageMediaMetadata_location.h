/**
 * Drive
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * File_imageMediaMetadata_location.h
 *
 * Geographic location information stored in the image.
 */

#ifndef File_imageMediaMetadata_location_H_
#define File_imageMediaMetadata_location_H_


#include "ModelBase.h"


namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Geographic location information stored in the image.
/// </summary>
class  File_imageMediaMetadata_location
    : public ModelBase
{
public:
    File_imageMediaMetadata_location();
    virtual ~File_imageMediaMetadata_location();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// File_imageMediaMetadata_location members

    /// <summary>
    /// The altitude stored in the image.
    /// </summary>
    double getAltitude() const;
    bool altitudeIsSet() const;
    void unsetAltitude();
    void setAltitude(double value);
    /// <summary>
    /// The latitude stored in the image.
    /// </summary>
    double getLatitude() const;
    bool latitudeIsSet() const;
    void unsetLatitude();
    void setLatitude(double value);
    /// <summary>
    /// The longitude stored in the image.
    /// </summary>
    double getLongitude() const;
    bool longitudeIsSet() const;
    void unsetLongitude();
    void setLongitude(double value);

protected:
    double m_Altitude;
    bool m_AltitudeIsSet;
    double m_Latitude;
    bool m_LatitudeIsSet;
    double m_Longitude;
    bool m_LongitudeIsSet;
};

}
}
}
}

#endif /* File_imageMediaMetadata_location_H_ */
