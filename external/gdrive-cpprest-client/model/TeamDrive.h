/**
 * Drive
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * TeamDrive.h
 *
 * Representation of a Team Drive.
 */

#ifndef TeamDrive_H_
#define TeamDrive_H_


#include "ModelBase.h"

#include "TeamDrive_backgroundImageFile.h"
#include "TeamDrive_capabilities.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Representation of a Team Drive.
/// </summary>
class  TeamDrive
    : public ModelBase
{
public:
    TeamDrive();
    virtual ~TeamDrive();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// TeamDrive members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TeamDrive_backgroundImageFile> getBackgroundImageFile() const;
    bool backgroundImageFileIsSet() const;
    void unsetBackgroundImageFile();
    void setBackgroundImageFile(std::shared_ptr<TeamDrive_backgroundImageFile> value);
    /// <summary>
    /// A short-lived link to this Team Drive&#39;s background image.
    /// </summary>
    utility::string_t getBackgroundImageLink() const;
    bool backgroundImageLinkIsSet() const;
    void unsetBackgroundImageLink();
    void setBackgroundImageLink(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TeamDrive_capabilities> getCapabilities() const;
    bool capabilitiesIsSet() const;
    void unsetCapabilities();
    void setCapabilities(std::shared_ptr<TeamDrive_capabilities> value);
    /// <summary>
    /// The color of this Team Drive as an RGB hex string. It can only be set on a drive.teamdrives.update request that does not set themeId.
    /// </summary>
    utility::string_t getColorRgb() const;
    bool colorRgbIsSet() const;
    void unsetColorRgb();
    void setColorRgb(utility::string_t value);
    /// <summary>
    /// The time at which the Team Drive was created (RFC 3339 date-time).
    /// </summary>
    utility::datetime getCreatedTime() const;
    bool createdTimeIsSet() const;
    void unsetCreatedTime();
    void setCreatedTime(utility::datetime value);
    /// <summary>
    /// The ID of this Team Drive which is also the ID of the top level folder for this Team Drive.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(utility::string_t value);
    /// <summary>
    /// Identifies what kind of resource this is. Value: the fixed string \&quot;drive#teamDrive\&quot;.
    /// </summary>
    utility::string_t getKind() const;
    bool kindIsSet() const;
    void unsetKind();
    void setKind(utility::string_t value);
    /// <summary>
    /// The name of this Team Drive.
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(utility::string_t value);
    /// <summary>
    /// The ID of the theme from which the background image and color will be set. The set of possible teamDriveThemes can be retrieved from a drive.about.get response. When not specified on a drive.teamdrives.create request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don&#39;t set colorRgb or backgroundImageFile.
    /// </summary>
    utility::string_t getThemeId() const;
    bool themeIdIsSet() const;
    void unsetThemeId();
    void setThemeId(utility::string_t value);

protected:
    std::shared_ptr<TeamDrive_backgroundImageFile> m_BackgroundImageFile;
    bool m_BackgroundImageFileIsSet;
    utility::string_t m_BackgroundImageLink;
    bool m_BackgroundImageLinkIsSet;
    std::shared_ptr<TeamDrive_capabilities> m_Capabilities;
    bool m_CapabilitiesIsSet;
    utility::string_t m_ColorRgb;
    bool m_ColorRgbIsSet;
    utility::datetime m_CreatedTime;
    bool m_CreatedTimeIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Kind;
    bool m_KindIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_ThemeId;
    bool m_ThemeIdIsSet;
};

}
}
}
}

#endif /* TeamDrive_H_ */
