/**
 * Drive
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * File_contentHints.h
 *
 * Additional information about the content of the file. These fields are never populated in responses.
 */

#ifndef File_contentHints_H_
#define File_contentHints_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "File_contentHints_thumbnail.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Additional information about the content of the file. These fields are never populated in responses.
/// </summary>
class  File_contentHints
    : public ModelBase
{
public:
    File_contentHints();
    virtual ~File_contentHints();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// File_contentHints members

    /// <summary>
    /// Text to be indexed for the file to improve fullText queries. This is limited to 128KB in length and may contain HTML elements.
    /// </summary>
    utility::string_t getIndexableText() const;
    bool indexableTextIsSet() const;
    void unsetIndexableText();
    void setIndexableText(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<File_contentHints_thumbnail> getThumbnail() const;
    bool thumbnailIsSet() const;
    void unsetThumbnail();
    void setThumbnail(std::shared_ptr<File_contentHints_thumbnail> value);

protected:
    utility::string_t m_IndexableText;
    bool m_IndexableTextIsSet;
    std::shared_ptr<File_contentHints_thumbnail> m_Thumbnail;
    bool m_ThumbnailIsSet;
};

}
}
}
}

#endif /* File_contentHints_H_ */
