/**
 * Drive
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * File_videoMediaMetadata.h
 *
 * Additional metadata about video media. This may not be available immediately upon upload.
 */

#ifndef File_videoMediaMetadata_H_
#define File_videoMediaMetadata_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Additional metadata about video media. This may not be available immediately upon upload.
/// </summary>
class  File_videoMediaMetadata
    : public ModelBase
{
public:
    File_videoMediaMetadata();
    virtual ~File_videoMediaMetadata();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// File_videoMediaMetadata members

    /// <summary>
    /// The duration of the video in milliseconds.
    /// </summary>
    utility::string_t getDurationMillis() const;
    bool durationMillisIsSet() const;
    void unsetDurationMillis();
    void setDurationMillis(utility::string_t value);
    /// <summary>
    /// The height of the video in pixels.
    /// </summary>
    int32_t getHeight() const;
    bool heightIsSet() const;
    void unsetHeight();
    void setHeight(int32_t value);
    /// <summary>
    /// The width of the video in pixels.
    /// </summary>
    int32_t getWidth() const;
    bool widthIsSet() const;
    void unsetWidth();
    void setWidth(int32_t value);

protected:
    utility::string_t m_DurationMillis;
    bool m_DurationMillisIsSet;
    int32_t m_Height;
    bool m_HeightIsSet;
    int32_t m_Width;
    bool m_WidthIsSet;
};

}
}
}
}

#endif /* File_videoMediaMetadata_H_ */
