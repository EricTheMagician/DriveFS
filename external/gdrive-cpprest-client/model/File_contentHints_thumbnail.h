/**
 * Drive
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * File_contentHints_thumbnail.h
 *
 * A thumbnail for the file. This will only be used if Drive cannot generate a standard thumbnail.
 */

#ifndef File_contentHints_thumbnail_H_
#define File_contentHints_thumbnail_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>
//#include "ByteArray.h"
#include <vector>
typedef std::vector<char> ByteArray ;
namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// A thumbnail for the file. This will only be used if Drive cannot generate a standard thumbnail.
/// </summary>
class  File_contentHints_thumbnail
    : public ModelBase
{
public:
    File_contentHints_thumbnail();
    virtual ~File_contentHints_thumbnail();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// File_contentHints_thumbnail members

    /// <summary>
    /// The thumbnail data encoded with URL-safe Base64 (RFC 4648 section 5).
    /// </summary>
    ByteArray getImage() const;
    bool imageIsSet() const;
    void unsetImage();
    void setImage(ByteArray value);
    /// <summary>
    /// The MIME type of the thumbnail.
    /// </summary>
    utility::string_t getMimeType() const;
    bool mimeTypeIsSet() const;
    void unsetMimeType();
    void setMimeType(utility::string_t value);

protected:
    ByteArray m_Image;
    bool m_ImageIsSet;
    utility::string_t m_MimeType;
    bool m_MimeTypeIsSet;
};

}
}
}
}

#endif /* File_contentHints_thumbnail_H_ */
