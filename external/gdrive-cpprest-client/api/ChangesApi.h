/**
 * Drive
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * ChangesApi.h
 *
 * 
 */

#ifndef ChangesApi_H_
#define ChangesApi_H_


#include "ApiClient.h"

#include "ChangeList.h"
#include "Channel.h"
#include "StartPageToken.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  ChangesApi
{
public:
    ChangesApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~ChangesApi();
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Gets the starting pageToken for listing future changes.
    /// </remarks>
    /// <param name="alt">Data format for the response. (optional, default to json)</param>/// <param name="fields">Selector specifying which fields to include in a partial response. (optional)</param>/// <param name="key">API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)</param>/// <param name="oauthToken">OAuth 2.0 token for the current user. (optional)</param>/// <param name="prettyPrint">Returns response with indentations and line breaks. (optional, default to true)</param>/// <param name="quotaUser">Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. (optional)</param>/// <param name="userIp">IP address of the site where the request originates. Use this if you want to enforce per-user limits. (optional)</param>/// <param name="supportsTeamDrives">Whether the requesting application supports Team Drives. (optional, default to false)</param>/// <param name="teamDriveId">The ID of the Team Drive for which the starting pageToken for listing future changes from that Team Drive will be returned. (optional)</param>
    pplx::task<std::shared_ptr<StartPageToken>> getStartPageToken(utility::string_t alt, utility::string_t fields, utility::string_t key, utility::string_t oauthToken, bool prettyPrint, utility::string_t quotaUser, utility::string_t userIp, bool supportsTeamDrives, utility::string_t teamDriveId);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Lists the changes for a user or Team Drive.
    /// </remarks>
    /// <param name="pageToken">The token for continuing a previous list request on the next page. This should be set to the value of &#39;nextPageToken&#39; from the previous response or to the response from the getStartPageToken method.</param>/// <param name="alt">Data format for the response. (optional, default to json)</param>/// <param name="fields">Selector specifying which fields to include in a partial response. (optional)</param>/// <param name="key">API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)</param>/// <param name="oauthToken">OAuth 2.0 token for the current user. (optional)</param>/// <param name="prettyPrint">Returns response with indentations and line breaks. (optional, default to true)</param>/// <param name="quotaUser">Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. (optional)</param>/// <param name="userIp">IP address of the site where the request originates. Use this if you want to enforce per-user limits. (optional)</param>/// <param name="includeCorpusRemovals">Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional, default to false)</param>/// <param name="includeRemoved">Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional, default to true)</param>/// <param name="includeTeamDriveItems">Whether Team Drive files or changes should be included in results. (optional, default to false)</param>/// <param name="pageSize">The maximum number of changes to return per page. (optional, default to 100)</param>/// <param name="restrictToMyDrive">Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive. (optional, default to false)</param>/// <param name="spaces">A comma-separated list of spaces to query within the user corpus. Supported values are &#39;drive&#39;, &#39;appDataFolder&#39; and &#39;photos&#39;. (optional, default to drive)</param>/// <param name="supportsTeamDrives">Whether the requesting application supports Team Drives. (optional, default to false)</param>/// <param name="teamDriveId">The Team Drive from which changes will be returned. If specified the change IDs will be reflective of the Team Drive; use the combined Team Drive ID and change ID as an identifier. (optional)</param>
    pplx::task<std::shared_ptr<ChangeList>> list(utility::string_t pageToken, utility::string_t alt, utility::string_t fields, utility::string_t key, utility::string_t oauthToken, bool prettyPrint, utility::string_t quotaUser, utility::string_t userIp, bool includeCorpusRemovals, bool includeRemoved, bool includeTeamDriveItems, int32_t pageSize, bool restrictToMyDrive, utility::string_t spaces, bool supportsTeamDrives, utility::string_t teamDriveId);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Subscribes to changes for a user.
    /// </remarks>
    /// <param name="pageToken">The token for continuing a previous list request on the next page. This should be set to the value of &#39;nextPageToken&#39; from the previous response or to the response from the getStartPageToken method.</param>/// <param name="alt">Data format for the response. (optional, default to json)</param>/// <param name="fields">Selector specifying which fields to include in a partial response. (optional)</param>/// <param name="key">API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)</param>/// <param name="oauthToken">OAuth 2.0 token for the current user. (optional)</param>/// <param name="prettyPrint">Returns response with indentations and line breaks. (optional, default to true)</param>/// <param name="quotaUser">Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided. (optional)</param>/// <param name="userIp">IP address of the site where the request originates. Use this if you want to enforce per-user limits. (optional)</param>/// <param name="includeCorpusRemovals">Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file. (optional, default to false)</param>/// <param name="includeRemoved">Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access. (optional, default to true)</param>/// <param name="includeTeamDriveItems">Whether Team Drive files or changes should be included in results. (optional, default to false)</param>/// <param name="pageSize">The maximum number of changes to return per page. (optional, default to 100)</param>/// <param name="resource"> (optional)</param>/// <param name="restrictToMyDrive">Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive. (optional, default to false)</param>/// <param name="spaces">A comma-separated list of spaces to query within the user corpus. Supported values are &#39;drive&#39;, &#39;appDataFolder&#39; and &#39;photos&#39;. (optional, default to drive)</param>/// <param name="supportsTeamDrives">Whether the requesting application supports Team Drives. (optional, default to false)</param>/// <param name="teamDriveId">The Team Drive from which changes will be returned. If specified the change IDs will be reflective of the Team Drive; use the combined Team Drive ID and change ID as an identifier. (optional)</param>
    pplx::task<std::shared_ptr<Channel>> watch(utility::string_t pageToken, utility::string_t alt, utility::string_t fields, utility::string_t key, utility::string_t oauthToken, bool prettyPrint, utility::string_t quotaUser, utility::string_t userIp, bool includeCorpusRemovals, bool includeRemoved, bool includeTeamDriveItems, int32_t pageSize, std::shared_ptr<Channel> resource, bool restrictToMyDrive, utility::string_t spaces, bool supportsTeamDrives, utility::string_t teamDriveId);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ChangesApi_H_ */

